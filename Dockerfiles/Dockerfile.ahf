# syntax=docker/dockerfile:1.3-labs
FROM oraclelinux:7-slim as base

# Use ARGs to keep the environment clean
ARG TFA_BASE=/opt/oracle.ahf
ARG INSTALL_DIR=/opt/install
ARG TFA_FILE="AHF-LINUX_v21.2.0.zip"

# Directory defaults
ARG SCRIPTS_DIR=/opt/scripts
ARG ORACLE_PATH=/home/oracle

# Build defaults
#ARG RPM_LIST="oracle-epel-release-el7 file-5.11 git less strace sudo tree vi which bash-completion"
#ARG RPM_SUPPLEMENT="rlwrap"
#ARG MIN_SPACE_GB=12
ARG BUILD_DATE=
ARG BUILD_VERSION=1.0
# Pass --build-arg DEBUG="bash -x" to run scripts in debug mode.
ARG DEBUG=

# DB configuration defaults
ENV TFA_BASE=$TFA_BASE \
    INSTALL_DIR=$INSTALL_DIR \
    TFA_FILE=$TFA_FILE

# Copy files needed during both installation and runtime
COPY --chown=oracle:oinstall ahf/$TFA_FILE $INSTALL_DIR/

RUN <<EOF
yum -y update; yum clean all
yum -y install systemd oracle-database-preinstall-19c openssl hostname vi less which strace perl perl-Digest-MD5 perl-Data-Dumper; yum clean all
(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done)
rm -f /etc/systemd/system/{getty,graphical,local-fs,remote-fs,sockets,sysinit,system-update,systemd-remount}.target.wants/*
rm -f /lib/systemd/system/{anaconda,basic,local-fs}.target.wants/*
rm -f /lib/systemd/system/sockets.target.wants/{*udev*,*initctl*}
rm -rf /var/cache/yum
mkdir -p $TFA_BASE
sync
unzip $INSTALL_DIR/$TFA_FILE -d $INSTALL_DIR
$INSTALL_DIR/ahf_setup -silent -ahf_loc $TFA_BASE -data_dir $TFA_BASE
rm -rf $INSTALL_DIR
systemctl set-default multi-user.target
EOF

VOLUME [ "/sys/fs/cgroup" ]
CMD [ "/usr/sbin/init" ]

# Build base image:
#RUN chmod ug+x $SCRIPTS_DIR/*.sh && \
#    $DEBUG $SCRIPTS_DIR/$MANAGE_ORACLE -e && \
#    rm -fr /tmp/* /var/cache/yum

#HEALTHCHECK --interval=1m --start-period=5m CMD $SCRIPTS_DIR/$MANAGE_ORACLE -h >/dev/null || exit 1
#CMD exec $DEBUG $SCRIPTS_DIR/$MANAGE_ORACLE
